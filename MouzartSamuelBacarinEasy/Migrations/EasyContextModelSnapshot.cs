// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MouzartSamuelBacarinEasy.Data;

namespace MouzartSamuelBacarinEasy.Migrations
{
    [DbContext(typeof(EasyContext))]
    partial class EasyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MouzartSamuelBacarinEasy.Models.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Linkedin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Portfolio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("MouzartSamuelBacarinEasy.Models.CandidateKnowledge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<int>("KnowledgeId")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("KnowledgeId");

                    b.ToTable("CandidateKnowledges");
                });

            modelBuilder.Entity("MouzartSamuelBacarinEasy.Models.Knowledge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Knowledges");
                });

            modelBuilder.Entity("MouzartSamuelBacarinEasy.Models.WorkLoad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<bool>("OnlyWeeKend")
                        .HasColumnType("bit");

                    b.Property<bool>("PerDay4To6")
                        .HasColumnType("bit");

                    b.Property<bool>("PerDay6To8")
                        .HasColumnType("bit");

                    b.Property<bool>("PerDayUpTo4")
                        .HasColumnType("bit");

                    b.Property<bool>("PerDayUpTo8")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId")
                        .IsUnique();

                    b.ToTable("WorkLoads");
                });

            modelBuilder.Entity("MouzartSamuelBacarinEasy.Models.WorkSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Afternoon")
                        .HasColumnType("bit");

                    b.Property<bool>("Business")
                        .HasColumnType("bit");

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<bool>("Dawn")
                        .HasColumnType("bit");

                    b.Property<int>("HourlySalaryRequirement")
                        .HasColumnType("int");

                    b.Property<bool>("Morning")
                        .HasColumnType("bit");

                    b.Property<bool>("Night")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId")
                        .IsUnique();

                    b.ToTable("WorkSchedules");
                });

            modelBuilder.Entity("MouzartSamuelBacarinEasy.Models.CandidateKnowledge", b =>
                {
                    b.HasOne("MouzartSamuelBacarinEasy.Models.Candidate", "Candidate")
                        .WithMany("CandidateKnowledges")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MouzartSamuelBacarinEasy.Models.Knowledge", "Knowledge")
                        .WithMany("CandidateKnowledges")
                        .HasForeignKey("KnowledgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MouzartSamuelBacarinEasy.Models.WorkLoad", b =>
                {
                    b.HasOne("MouzartSamuelBacarinEasy.Models.Candidate", "Candidate")
                        .WithOne("WorkLoad")
                        .HasForeignKey("MouzartSamuelBacarinEasy.Models.WorkLoad", "CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MouzartSamuelBacarinEasy.Models.WorkSchedule", b =>
                {
                    b.HasOne("MouzartSamuelBacarinEasy.Models.Candidate", "Candidate")
                        .WithOne("WorkSchedule")
                        .HasForeignKey("MouzartSamuelBacarinEasy.Models.WorkSchedule", "CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
